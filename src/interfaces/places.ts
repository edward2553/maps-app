import { Geometry } from "./shared";

export interface PlacesContextProps {
  isLoading: boolean;
  userLocation?: { lat: number; lng: number };
  places: Feature[];
  isLoadingPlaces: boolean;
  onSearchPlacesByTerm: (query: string) => Promise<Feature[]>;
}

export interface PlacesState {
  isLoading: boolean;
  isLoadingPlaces: boolean;
  places: Feature[];
  userLocation?: { lat: number; lng: number };
}

// Generated by https://quicktype.io

export interface IPlacesResponse {
  type: string;
  query: string[];
  features: Feature[];
  attribution: string;
}

export interface Feature {
  id: string;
  type: string;
  place_type: string[];
  relevance: number;
  properties: Properties;
  text_es: string;
  language_es?: Language;
  place_name_es: string;
  text: string;
  language?: Language;
  place_name: string;
  center: number[];
  geometry: Geometry;
  context: Context[];
}

export interface Context {
  id: string;
  mapbox_id: string;
  text_es: string;
  text: string;
  wikidata?: string;
  language_es?: Language;
  language?: Language;
  short_code?: string;
}

export enum Language {
  Es = 'es',
}

export interface Properties {
  wikidata?: string;
  category: string;
  landmark: boolean;
  foursquare: string;
  address: string;
  maki?: string;
}
